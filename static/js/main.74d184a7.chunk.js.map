{"version":3,"sources":["connectors.ts","nft.ts","lib/firebase.ts","models/nft_token.ts","models/redeem_form.ts","components/css_image.tsx","components/redeem_form.tsx","components/showcase.tsx","app.tsx","hooks.ts","reportWebVitals.ts","index.tsx"],"names":["POLLING_INTERVAL","RPC_URLS","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","1","bridge","qrcode","pollingInterval","ledger","LedgerConnector","chainId","url","trezor","TrezorConnector","manifestEmail","manifestAppUrl","getEIP721Contract","contractAddress","signer","Contract","Firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","collection","index","a","get","snapshot","tokens","docs","map","doc","data","key","m","owner","Date","now","create","k","set","getRedeemedTokenIds","where","models","tokenId","CssImage","props","style","width","height","backgroundImage","src","backgroundSize","backgroundRepeat","RedeemFormConponent","state","model","onChange","bind","onSubmit","this","type","name","placeholder","value","country","event","currentTarget","city","address","onClick","onClose","clone","Object","assign","setState","preventDefault","React","Component","Showcase","children","useWeb3React","account","library","useState","undefined","owners","setOwners","redeemedTokens","setRedeemedTokens","setTokens","redeemForm","setRedeemForm","useEffect","NFTToken","RedeemForm","getSigner","contract","NFT","token","ownerOf","console","error","didOwnersFetched","isOwner","isRedeemed","includes","imageUrl","href","target","rel","getLibrary","provider","Web3Provider","Balance","balance","setBalance","getBalance","formatEther","ConnectorButton","theConnector","title","context","connector","activate","isConnected","App","deactivate","active","tried","setTried","isAuthorized","then","catch","useEagerConnect","padding","Connectors","message","AppWrapper","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74d184a7.chunk.js","sourcesContent":["import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { LedgerConnector } from '@web3-react/ledger-connector'\nimport { TrezorConnector } from '@web3-react/trezor-connector'\n\nconst POLLING_INTERVAL = 12000\n\nconst RPC_URLS: { [chainId: number]: string } = {\n  1: `https://mainnet.infura.io/v3/60ab76e16df54c808e50a79975b4779f`,\n}\n\nexport const injected = new InjectedConnector({ supportedChainIds: [1] })\n\nexport const walletconnect = new WalletConnectConnector({\n  rpc: { 1: RPC_URLS[1] },\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL\n})\n\n\nexport const ledger = new LedgerConnector({ chainId: 1, url: RPC_URLS[1], pollingInterval: POLLING_INTERVAL })\n\nexport const trezor = new TrezorConnector({\n  chainId: 1,\n  url: RPC_URLS[1],\n  pollingInterval: POLLING_INTERVAL,\n  manifestEmail: 'dummy@abc.xyz',\n  manifestAppUrl: 'http://localhost:1234'\n})","import { Contract } from '@ethersproject/contracts'\nimport { JsonRpcSigner } from '@ethersproject/providers'\n\nconst iep1155ContractABI = '[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contractURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenURIPrefix\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"bps\",\"type\":\"uint256[]\"}],\"name\":\"SecondarySaleFees\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"SignerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"SignerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addSigner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"creators\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"fees\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getFeeBps\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getFeeRecipients\",\"outputs\":[{\"internalType\":\"address payable[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isSigner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC1155Base.Fee[]\",\"name\":\"fees\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeSigner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceSigner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractURI\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenURIPrefix\",\"type\":\"string\"}],\"name\":\"setTokenURIPrefix\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenURIPrefix\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]'\nconst eip721ContractABI = '[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contractURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenURIPrefix\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"bps\",\"type\":\"uint256[]\"}],\"name\":\"SecondarySaleFees\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"fees\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getFeeBps\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getFeeRecipients\",\"outputs\":[{\"internalType\":\"address payable[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC721Base.Fee[]\",\"name\":\"_fees\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractURI\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenURIPrefix\",\"type\":\"string\"}],\"name\":\"setTokenURIPrefix\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenURIPrefix\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]'\n\n// EIP 1155\n\nexport const TokenId = '20272'\n\nexport function getEIP1155Contract(signer: JsonRpcSigner) {\n  const contractAddress = '0xd07dc4262bcdbf85190c01c996b4c06a461d2430'\n  return new Contract(contractAddress, iep1155ContractABI, signer)\n}\n\n// {\"name\":\"Pitsa\",\"description\":\"Ang anting-anting na Pitsa ay binendisyonan ni Santo Eliserio ng Iglesia ni Eliserio. Ang nagmamay-ari nito ay protektado laban sa pagtatae.\",\"image\":\"https://ipfs.daonomic.com/ipfs/QmdU9h6dECWKRoKA5Ttu67Sj9ZG2DL37n4uh3HZMra8yyg\",\"attributes\":[],\"collection\":{\"@class\":\"com.rarible.domain.Token\",\"id\":\"0xd07dc4262bcdbf85190c01c996b4c06a461d2430\",\"nonce\":0,\"name\":\"Rarible\",\"symbol\":\"RARI\",\"status\":\"CONFIRMED\",\"features\":[\"APPROVE_FOR_ALL\",\"SET_URI_PREFIX\",\"BURN\",\"MINT_WITH_ADDRESS\",\"SECONDARY_SALE_FEES\"],\"standard\":\"ERC1155\",\"startBlockNumber\":1,\"version\":0},\"price\":\".1\",\"saleable\":true,\"lockable\":false,\"value\":\"10\"}\nexport type RaribleToken = {\n  name: string\n  description: string\n  external_url: any[]\n}\n\n// EIP 721\n\ntype EIP721RaribleNFTToken = {\n  contractAddress: string\n  tokenId: number\n}\n\nexport const eip721NFTTokens: EIP721RaribleNFTToken[] = [\n  { contractAddress: '0x60f80121c31a0d46b5279700f9df786054aa5ee5', tokenId: 63458 }\n]\n\nexport function getEIP721Contract(contractAddress: string, signer: JsonRpcSigner) {\n  return new Contract(contractAddress, eip721ContractABI, signer)\n}","import Firebase from 'firebase'\nimport \"firebase/firestore\"\n\n// const serviceAccountKey = {\n//   \"type\": \"service_account\",\n//   \"project_id\": \"saltandsatoshi\",\n//   \"private_key_id\": \"14f0a524520f7f932fc0646b319023696bc69c5f\",\n//   \"private_key\": \"-----BEGIN PRIVATE KEY-----\\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDhXHJW4oRv72TJ\\nH7FkB+VtmklhzotUomwchEsTBhWOTX5jIzUfDYOmy3HLgYBrHtyHXq8+AEotDWe6\\nnq36AraRrkzBnxJkXk0S2WjsQajy21WrUuka6nO8xGCFKVHB+K14NyZBMj2p9x7b\\nfjyDx7SiwJLRRk51UjpSfaoYXgzGJOBZLq3jOQQ6FbVtcv0g5qYOwJ8WsG6D0L4Z\\nKTNjekqiEqUTNUgAXJejLL9ZSgkPQAbajUtPSWlYfDcwBf4us9pVnOMiZR687m0i\\nZoZxl9/a46HVcbSlBF+DvNyMVL96A7NOqhhYGj7G6jmyjUYuqFGWaqsEYkN5BeT2\\n7EFFzdHhAgMBAAECggEANDNyRr7kd3snyNCfCfEsSyWEXvP1YS7YRQi9zRPJNXOs\\n1XDn0qASQTX5z25ZXTbCVVbw17dAd0wWHWu5F+K+AGOz4tuian5PcxDKFYOmC08T\\n+oHTfgkVswF37BBkoD4mjGSV518oWnDkBGqqwMmnBVX/DBuxe8qGuOnj1w4d/l1I\\nB+6ykvZCuBZLMkRKXYDKRNYflytkEZ+65ZDC6hYZw5VmvOsgx0txe95VOaHybYCl\\nyve6+yMnZFFQ1INBcBA2rRKopdbClV/1OYa2CtrDdk+cryeKIT7OkZZQgK6eY0du\\n8Cn82JNqyduExLwxlk9WZT/IWDmn1k6vzpqWJD3HOwKBgQD333OP/DqUV/t8Yw2s\\n1ie/7wSgUVK1qXQ/4kEXkvbmVg5kWR3uncN00idmoHSZxiXG40l7wjx3D4HxQvBK\\nLnmz5ePax5OKpSBTUCaOCCMkXPWxHwKcOzk3Gwm+Ko/aZx4peH+twg3sEu/G0dl9\\nNXYKiPp+ACwQse5sHEfhrZbeSwKBgQDowApZ2ahPlVJVBmQOGMrtNokz7dBoigad\\nNH4UBqmXNsHQDgyyRnURdVxyOp9iqfVJumDCGrh3j0dwas1xXetmn5fiG5tC/jSJ\\nuIz16j08pmjcM6szjPbHb5LZMKbEPekeSVRUvPLG2xjVx4AEML0HaENmqj5gT3fl\\noxyQyf1FAwKBgDtGPCRadMe0oncEWOjT7X2AcuLDj7vRYfNE77vrcQ9z1M06YmYF\\nZBAzkSiBhmCfebkt8QyfTkZKdxByqXOT2ZajivFueGHXSvuhVxbv6zdu43IPsFgb\\n8Xq0BIhtNSlNL3FLV3z9wsaJYL1ywUen2Sp7xysKb38ujY1c1fOpx0IxAoGBAJu0\\nlXgkbz/GUk0FOHxhw6fL2x+9UbYN2HzkuA+noV7CyAfqzj2ZewnR7KWSaDw2HR1U\\nrRRNkeiSFqWzHXtg7HE8BPzDoSvBKd6UcuC08oCXhwEBI+AZxqIHF0NrE7WnAUQ8\\npEkIGpZDzqp9izvCa0MAUk7lR1Ng9oHOi/ak2mWHAoGBALzXkn/3xg5zZzKowVbK\\nt4g4R/X/qrrr4Q8wEEPt3uFRaV5L96M7pmM4iM3VC1IOvH659m2C9tu6FogkrSjN\\nXuzLyH/3Zc6/APEK5RzjFb0HoUR1CJQRcb1HKmnd7BbqlGy6m7olfbpLd/RBwa0U\\n9+UqApxHo8ZroTYkK3lC09E8\\n-----END PRIVATE KEY-----\\n\",\n//   \"client_email\": \"saltandsatoshi@appspot.gserviceaccount.com\",\n//   \"client_id\": \"105157889716386793607\",\n//   \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n//   \"token_uri\": \"https://oauth2.googleapis.com/token\",\n//   \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n//   \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/saltandsatoshi%40appspot.gserviceaccount.com\"\n// }\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC8DwM9z-H9cSTCqHR4UGEvW86jL63sre0\", // \"AIzaSyCccgoP_7ndBWqvZkPbSml3JV4RpRIyERU\",\n  authDomain: \"saltandsatoshi.firebaseapp.com\",\n  databaseURL: \"https://saltandsatoshi.firebaseio.com\",\n  projectId: \"saltandsatoshi\",\n  storageBucket: \"saltandsatoshi.appspot.com\",\n  messagingSenderId: \"629543041272\",\n  appId: \"1:629543041272:web:80d0b9de555810bbc9e30d\"\n};\n\nFirebase.initializeApp(firebaseConfig)\nconst firestore = Firebase.firestore()\n\nexport { firestore }","import * as Firebase from '../lib/firebase'\n\nexport const contractAddress = '0x60f80121c31a0d46b5279700f9df786054aa5ee5'\n\nexport type Token = {\n  tokenId: number\n  imageUrl: string\n}\n\nconst collection = Firebase.firestore.collection('nft_tokens')\n\nexport async function index() {\n  const snapshot = await collection.get()\n  const tokens = snapshot.docs.map(doc => doc.data() as Token)\n  return tokens\n}","import * as Firebase from '../lib/firebase'\n\nexport type RedeemForm = {\n  owner: string\n  tokenId: number\n  country?: string\n  city?: string\n  address?: string\n}\n\nconst collection = Firebase.firestore.collection('redeem_forms')\n\nfunction key(m: RedeemForm) {\n  return `${m.owner}-${Date.now()}`\n}\n\nexport async function create(m: RedeemForm) {\n  const k = key(m)\n  const doc = collection.doc(k)\n  await doc.set(m)\n}\n\nexport async function getRedeemedTokenIds(owner: string) {\n  const snapshot = await collection.where('owner', '==', owner).get()\n  const models = snapshot.docs.map(doc => doc.data() as RedeemForm)\n  return models.map(m => m.tokenId!)\n}\n\nexport default RedeemForm","import React from 'react'\n\ntype Props = {\n  src: string\n  width: number\n  height: number\n}\n\nconst CssImage: React.FC<Props> = (props: Props) => {\n  return (\n    <div\n      style={{\n        width: props.width,\n        height: props.height,\n        backgroundImage: `url(${props.src})`,\n        backgroundSize: \"contain\",\n        backgroundRepeat: \"no-repeat\",\n      }}\n    />\n  )\n}\n\nexport default CssImage","import React from 'react'\nimport RedeemForm from '../models/redeem_form'\n\ntype Props = {\n  model: RedeemForm\n  onSubmit: (model: RedeemForm) => any\n  onClose: () => any\n}\ntype State = {\n  model: RedeemForm\n}\n\nclass RedeemFormConponent extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props)\n    this.state = {\n      model: props.model,\n    }\n    this.onChange = this.onChange.bind(this)\n    this.onSubmit = this.onSubmit.bind(this)\n  }\n\n  render() {\n    const { model } = this.props\n    \n    return (\n      <>\n        <h1>Redeem</h1>\n        <form onSubmit={this.onSubmit}>\n          <input\n            type=\"text\" name=\"country\" placeholder=\"country\" value={model.country}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              model.country = event.currentTarget.value\n              this.onChange(model)\n            }}\n          />\n          <br/>\n          <input\n            type=\"text\" name=\"city\" placeholder=\"city\" value={model.city}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              model.city = event.currentTarget.value\n              this.onChange(model)\n            }}\n          />\n          <br/>\n          <input\n            type=\"text\" name=\"address\" placeholder=\"address\" value={model.address}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              model.address = event.currentTarget.value\n              this.onChange(model)\n            }}\n          />\n          <br/>\n          <button type=\"submit\">Submit</button>\n          <button onClick={this.props.onClose}>Close</button>\n        </form>\n      </>)\n  }\n\n  private onChange(model: RedeemForm) {\n    const clone = Object.assign({}, model) as RedeemForm\n    this.setState({\n      model: clone\n    })\n  }\n\n  private onSubmit(event: React.SyntheticEvent<HTMLFormElement>) {\n    event.preventDefault()\n    this.props.onSubmit(this.state.model)\n  }\n}\n\nexport default RedeemFormConponent","import React from 'react'\n\nimport * as NFT from '../nft'\nimport * as NFTToken from '../models/nft_token'\nimport * as RedeemForm from '../models/redeem_form'\n\nimport CSSImage from './css_image'\n\nimport { useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\nimport RedeemFormComponent from './redeem_form'\n\ntype Owners = {[key: number]: string} // token id => owner\n\nconst Showcase: React.FC<{}> = ({children}) => {\n  const { account, library } = useWeb3React<Web3Provider>()\n\n  const [owners, setOwners] = React.useState<Owners | undefined>(undefined)\n  const [redeemedTokens, setRedeemedTokens] = React.useState<number[] | undefined>(undefined)\n  const [tokens, setTokens] = React.useState<NFTToken.Token[] | undefined>(undefined)\n  const [redeemForm, setRedeemForm] = React.useState<RedeemForm.RedeemForm | undefined>(undefined)\n\n  // Load tokens from Firebase\n  React.useEffect(() => {\n    if (!!tokens) { return } // guard: already done\n\n    (async () => {\n      const tokens = await NFTToken.index()\n      setTokens(tokens)\n    })()\n  }, [tokens])\n\n  // Load redeemed tokens\n  React.useEffect(() => {\n    if (!account) { return } // guard: web3\n    if (!!redeemedTokens) { return } // guard: already done\n\n    (async () => {\n      const redeemedTokens = await RedeemForm.getRedeemedTokenIds(account)\n      setRedeemedTokens(redeemedTokens)\n    })()\n  }, [account, redeemedTokens])\n\n  // Get token owners\n  React.useEffect(() => {\n    if (!account || !library) { return } // guard: web3\n    if (!tokens) { return } // guard: tokens to be fetched\n    if (!!owners) { return } // guard: already done\n    \n    (async () => {\n      const signer = await library.getSigner(account)\n      const contract = NFT.getEIP721Contract(NFTToken.contractAddress, signer)\n\n      const clone = Object.assign({}, owners) as Owners\n\n      for(const token of tokens) {\n        try {\n          const ownerOf = await (contract as any).ownerOf(token.tokenId)\n          clone[token.tokenId] = ownerOf\n        } catch (err) {\n          console.error(err)\n        }\n      }\n\n      setOwners(clone)\n    })()\n  }, [account, library, owners, tokens])\n\n  const didOwnersFetched = !!owners\n\n  return (\n    <>\n      { !tokens ?\n          <>⌛ Loading</> :\n          <ul>\n            { tokens!.map(token => {\n              const ownerOf = (owners || {})[token.tokenId]\n              const isOwner = !!ownerOf && ownerOf === account\n              const isRedeemed = isOwner && (redeemedTokens || []).includes(token.tokenId)\n              return (\n                <li key={`${token.tokenId}`}>\n                  <CSSImage src={token.imageUrl} width={150} height={150}/>\n                  <br/>\n                  {token.tokenId}\n                  <br/>\n                  {\n                    !didOwnersFetched ?\n                      <>⌛</> : (\n                        !ownerOf ?\n                          <a href=\"https://opensea.io/\" target=\"_blank\" rel=\"noreferrer\">Buy</a> :\n                          <>{ isOwner ?\n                                (\n                                  isRedeemed ? \n                                    <>Already redeemed</> :\n                                    <>✅ You can <button onClick={() => {\n                                      setRedeemForm({ owner: account!, tokenId: token.tokenId })\n                                    }}>redeem</button> your T-shirt</>\n                                ) : \n                                <>Sold</> }</>\n                      )\n                  }\n                </li>)\n            })}\n          </ul>\n      }\n      { !!redeemForm && (\n        <RedeemFormComponent\n          model={redeemForm}\n          onSubmit={async (m) => {\n            await RedeemForm.create(m)\n            setRedeemedTokens([...(redeemedTokens!), m.tokenId])\n            setRedeemForm(undefined)\n          }}\n          onClose={() => setRedeemForm(undefined)}\n        />\n      ) }\n    </>)\n}\n\nexport default Showcase","import React from 'react'\n\nimport { Web3ReactProvider, useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { formatEther } from '@ethersproject/units'\nimport { BigNumberish } from \"@ethersproject/bignumber\"\n// import { Contract } from '@ethersproject/contracts'\n\n// import * as Infura from './infura'\nimport * as Connectors from './connectors'\nimport { useEagerConnect } from './hooks'\nimport Showcase from './components/showcase'\n\nfunction getLibrary(provider: any): Web3Provider {\n  const library = new Web3Provider(provider)\n  return library\n}\n\nfunction AppWrapper() {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <App/>\n    </Web3ReactProvider>\n  )\n}\n\nfunction Balance() {\n  const { account, library, chainId } = useWeb3React<Web3Provider>()\n  const [balance, setBalance] = React.useState<BigNumberish>(0)\n  React.useEffect(() => {\n    if (!account || !library) { return }\n    \n    (async () => {\n      const balance = await library.getBalance(account)\n      setBalance(balance)\n    })()\n  }, [account, library, chainId])\n\n  return (<>💰 Ξ{formatEther(balance)}</>)\n}\n\n// const EIP1155Contract: React.FC<{tokenId: string}> = ({children, tokenId}) => {\n//   const { account, library, chainId } = useWeb3React<Web3Provider>()\n\n//   const [contract, setContract] = React.useState<Contract | undefined>(undefined)\n//   const [balance, setBalance] = React.useState<BigNumberish>(0)\n//   const [raribleToken, setRaribleToken] = React.useState<RaribleToken>()\n  \n//   React.useEffect(() => {\n//     if (!account || !library) { return }\n//     (async () => {\n//       const signer = await library.getSigner(account)\n//       const contract = getEIP1155Contract(signer)\n//       setContract(contract)\n\n//       const balance = await (contract as any).balanceOf(account, tokenId)\n//       setBalance(balance)\n\n//       const tokenUri = await (contract as any).uri(tokenId)\n//       const raribleToken = await (await fetch(tokenUri)).json() as RaribleToken\n//       setRaribleToken(raribleToken)\n//     })()\n//   }, [account, library, chainId])\n\n//   return (\n//     <>\n//       <p>Contract address {contract?.address}</p>\n//       <p>Token Id {tokenId}</p>\n//       <p>Name {raribleToken?.name}</p>\n//       <p>Description {raribleToken?.description}</p>\n//       <p>External URL {raribleToken?.external_url}</p>\n//       <p>💰 {balance.toString()}</p>\n//     </>)\n// }\n\nconst ConnectorButton: React.FC<{theConnector: any, title: string}> = ({children, theConnector, title}) => {\n  const context = useWeb3React<Web3Provider>()\n  const { connector, activate } = context\n  const isConnected = connector === theConnector\n\n  return (\n    <button onClick={() => { activate(theConnector) }}>\n      {title}\n      &nbsp;\n      { isConnected && <>✅</> }\n    </button>)\n}\n\nfunction App() {\n  const context = useWeb3React<Web3Provider>()\n  const { chainId, account, deactivate, active, error } = context\n\n  useEagerConnect()\n\n  return (\n    <div style={{padding: '15px'}}>\n      <h1>Welcome</h1>\n      <ConnectorButton theConnector={Connectors.injected} title=\"Metamask\"/>\n      <ConnectorButton theConnector={Connectors.ledger} title=\"Ledger\"/>\n      <ConnectorButton theConnector={Connectors.trezor} title=\"Trezor\"/>\n      <ConnectorButton theConnector={Connectors.walletconnect} title=\"Walletconnect\"/>\n      <button onClick={() => { deactivate() }}>Disconnect</button>\n      <br/>\n      { active && <>🏃‍♂️ Active</> }\n      \n      { error && <>⚠️ {error.message}</> }\n      { chainId && <>🕸️ {chainId}</> }\n      { !!account && <>🧍 {account}</> }\n      { !!account && <Balance/> }\n\n      {/* <br/>\n      <h1>Step 2. NFT</h1>\n      <a href=\"https://etherscan.io/address/0xd07dc4262bcdbf85190c01c996b4c06a461d2430\" target=\"_blank\">Go to contract on etherscan.io</a>\n      <br/>\n      <EIP1155Contract tokenId={TokenId}/> */}\n\n      <br/>\n      <h1>Showcase</h1>\n      <Showcase/>\n    </div>)\n      \n}\n\nexport default AppWrapper\n","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\n\nimport { injected } from './connectors'\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3React()\n\n  const [tried, setTried] = useState(false)\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized: boolean) => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else {\n        setTried(true)\n      }\n    })\n  }, [ activate ]) // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true)\n    }\n  }, [tried, active])\n\n  return tried\n}\n\nexport function useInactiveListener(suppress: boolean = false) {\n  const { active, error, activate } = useWeb3React()\n\n  useEffect((): any => {\n    const { ethereum } = window as any\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleConnect = () => {\n        console.log(\"Handling 'connect' event\")\n        activate(injected)\n      }\n      const handleChainChanged = (chainId: string | number) => {\n        console.log(\"Handling 'chainChanged' event with payload\", chainId)\n        activate(injected)\n      }\n      const handleAccountsChanged = (accounts: string[]) => {\n        console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n        if (accounts.length > 0) {\n          activate(injected)\n        }\n      }\n      const handleNetworkChanged = (networkId: string | number) => {\n        console.log(\"Handling 'networkChanged' event with payload\", networkId)\n        activate(injected)\n      }\n\n      ethereum.on('connect', handleConnect)\n      ethereum.on('chainChanged', handleChainChanged)\n      ethereum.on('accountsChanged', handleAccountsChanged)\n      ethereum.on('networkChanged', handleNetworkChanged)\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('connect', handleConnect)\n          ethereum.removeListener('chainChanged', handleChainChanged)\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\n          ethereum.removeListener('networkChanged', handleNetworkChanged)\n        }\n      }\n    }\n  }, [active, error, suppress, activate])\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}