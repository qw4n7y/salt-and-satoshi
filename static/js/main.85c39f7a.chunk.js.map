{"version":3,"sources":["connectors.ts","nft.ts","app.tsx","hooks.ts","reportWebVitals.ts","index.tsx"],"names":["POLLING_INTERVAL","RPC_URLS","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","1","bridge","qrcode","pollingInterval","ledger","LedgerConnector","chainId","url","trezor","TrezorConnector","manifestEmail","manifestAppUrl","getEIP1155Contract","signer","Contract","getLibrary","provider","Web3Provider","Balance","useWeb3React","account","library","React","useState","balance","setBalance","useEffect","a","getBalance","formatEther","EIP1155Contract","children","tokenId","undefined","contract","setContract","raribleToken","setRaribleToken","getSigner","balanceOf","uri","tokenUri","fetch","json","address","name","description","external_url","toString","App","context","connector","activate","deactivate","active","error","tried","setTried","isAuthorized","then","catch","useEagerConnect","connected","Connectors","onClick","message","href","target","AppWrapper","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85c39f7a.chunk.js","sourcesContent":["import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { LedgerConnector } from '@web3-react/ledger-connector'\nimport { TrezorConnector } from '@web3-react/trezor-connector'\n\nconst POLLING_INTERVAL = 12000\n\nconst RPC_URLS: { [chainId: number]: string } = {\n  1: `https://mainnet.infura.io/v3/60ab76e16df54c808e50a79975b4779f`,\n}\n\nexport const injected = new InjectedConnector({ supportedChainIds: [1] })\n\nexport const walletconnect = new WalletConnectConnector({\n  rpc: { 1: RPC_URLS[1] },\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL\n})\n\n\nexport const ledger = new LedgerConnector({ chainId: 1, url: RPC_URLS[1], pollingInterval: POLLING_INTERVAL })\n\nexport const trezor = new TrezorConnector({\n  chainId: 1,\n  url: RPC_URLS[1],\n  pollingInterval: POLLING_INTERVAL,\n  manifestEmail: 'dummy@abc.xyz',\n  manifestAppUrl: 'http://localhost:1234'\n})","import { Contract } from '@ethersproject/contracts'\nimport { JsonRpcSigner } from '@ethersproject/providers'\n\nexport const TokenId = '20272'\n\nexport function getEIP1155Contract(signer: JsonRpcSigner) {\n  const contractAddress = '0xd07dc4262bcdbf85190c01c996b4c06a461d2430'\n  const contractABI = `[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contractURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenURIPrefix\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"bps\",\"type\":\"uint256[]\"}],\"name\":\"SecondarySaleFees\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"SignerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"SignerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addSigner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"creators\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"fees\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getFeeBps\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getFeeRecipients\",\"outputs\":[{\"internalType\":\"address payable[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isSigner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC1155Base.Fee[]\",\"name\":\"fees\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeSigner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceSigner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractURI\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenURIPrefix\",\"type\":\"string\"}],\"name\":\"setTokenURIPrefix\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenURIPrefix\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]`\n\n  return new Contract(contractAddress, contractABI, signer)\n}\n\n// {\"name\":\"Pitsa\",\"description\":\"Ang anting-anting na Pitsa ay binendisyonan ni Santo Eliserio ng Iglesia ni Eliserio. Ang nagmamay-ari nito ay protektado laban sa pagtatae.\",\"image\":\"https://ipfs.daonomic.com/ipfs/QmdU9h6dECWKRoKA5Ttu67Sj9ZG2DL37n4uh3HZMra8yyg\",\"attributes\":[],\"collection\":{\"@class\":\"com.rarible.domain.Token\",\"id\":\"0xd07dc4262bcdbf85190c01c996b4c06a461d2430\",\"nonce\":0,\"name\":\"Rarible\",\"symbol\":\"RARI\",\"status\":\"CONFIRMED\",\"features\":[\"APPROVE_FOR_ALL\",\"SET_URI_PREFIX\",\"BURN\",\"MINT_WITH_ADDRESS\",\"SECONDARY_SALE_FEES\"],\"standard\":\"ERC1155\",\"startBlockNumber\":1,\"version\":0},\"price\":\".1\",\"saleable\":true,\"lockable\":false,\"value\":\"10\"}\nexport type RaribleToken = {\n  name: string\n  description: string\n  external_url: any[]\n}","import React from 'react'\n\nimport { Web3ReactProvider, useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { formatEther } from '@ethersproject/units'\nimport { BigNumberish } from \"@ethersproject/bignumber\"\nimport { Contract } from '@ethersproject/contracts'\n\n// import * as Infura from './infura'\nimport * as Connectors from './connectors'\nimport { useEagerConnect } from './hooks'\nimport { TokenId, getEIP1155Contract, RaribleToken } from './nft'\n\nfunction getLibrary(provider: any): Web3Provider {\n  const library = new Web3Provider(provider)\n  return library\n}\n\nfunction AppWrapper() {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <App/>\n    </Web3ReactProvider>\n  )\n}\n\nfunction Balance() {\n  const { account, library, chainId } = useWeb3React<Web3Provider>()\n  const [balance, setBalance] = React.useState<BigNumberish>(0)\n  React.useEffect(() => {\n    if (!account || !library) { return }\n    \n    (async () => {\n      const balance = await library.getBalance(account)\n      setBalance(balance)\n    })()\n  }, [account, library, chainId])\n\n  return (<>💰 Ξ{formatEther(balance)}</>)\n}\n\nconst EIP1155Contract: React.FC<{tokenId: string}> = ({children, tokenId}) => {\n  const { account, library, chainId } = useWeb3React<Web3Provider>()\n\n  const [contract, setContract] = React.useState<Contract | undefined>(undefined)\n  const [balance, setBalance] = React.useState<BigNumberish>(0)\n  const [raribleToken, setRaribleToken] = React.useState<RaribleToken>()\n  \n  React.useEffect(() => {\n    if (!account || !library) { return }\n    (async () => {\n      const signer = await library.getSigner(account)\n      const contract = getEIP1155Contract(signer)\n      setContract(contract)\n\n      const balance = await (contract as any).balanceOf(account, tokenId)\n      setBalance(balance)\n\n      const tokenUri = await (contract as any).uri(tokenId)\n      const raribleToken = await (await fetch(tokenUri)).json() as RaribleToken\n      setRaribleToken(raribleToken)\n    })()\n  }, [account, library, chainId])\n\n  return (\n    <>\n      <p>Contract address {contract?.address}</p>\n      <p>Token Id {tokenId}</p>\n      <p>Name {raribleToken?.name}</p>\n      <p>Description {raribleToken?.description}</p>\n      <p>External URL {raribleToken?.external_url}</p>\n      <p>💰 {balance.toString()}</p>\n    </>)\n}\n\nfunction App() {\n  const context = useWeb3React<Web3Provider>()\n  const { connector, chainId, account, activate, deactivate, active, error } = context\n\n  useEagerConnect()\n\n  const connected = connector === Connectors.injected\n\n  return (\n    <>\n      <h1>Step 1. Connect to Etherium</h1>\n      <button onClick={() => { activate(Connectors.injected) }}>Metamask</button>\n      <button onClick={() => { activate(Connectors.ledger) }}>Ledger</button>\n      <button onClick={() => { activate(Connectors.trezor) }}>Trezor</button>\n      <button onClick={() => { activate(Connectors.walletconnect) }}>Walletconnect</button>\n      <button onClick={() => { deactivate() }}>Disconnect</button>\n      <br/>\n      { active && <>🏃‍♂️ Active</> }\n      { connected && <>✅ Connected</> }\n      { error && <>⚠️ {error.message}</> }\n      { chainId && <>🕸️ {chainId}</> }\n      { account && <>🧍 {account}</> }\n      { connected && <Balance/> }\n\n      <br/>\n      <h1>Step 2. NFT</h1>\n      <a href=\"https://etherscan.io/address/0xd07dc4262bcdbf85190c01c996b4c06a461d2430\" target=\"_blank\">Go to contract on etherscan.io</a>\n      <br/>\n      <EIP1155Contract tokenId={TokenId}/>\n    </>)\n      \n}\n\nexport default AppWrapper\n","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\n\nimport { injected } from './connectors'\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3React()\n\n  const [tried, setTried] = useState(false)\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized: boolean) => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else {\n        setTried(true)\n      }\n    })\n  }, []) // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true)\n    }\n  }, [tried, active])\n\n  return tried\n}\n\nexport function useInactiveListener(suppress: boolean = false) {\n  const { active, error, activate } = useWeb3React()\n\n  useEffect((): any => {\n    const { ethereum } = window as any\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleConnect = () => {\n        console.log(\"Handling 'connect' event\")\n        activate(injected)\n      }\n      const handleChainChanged = (chainId: string | number) => {\n        console.log(\"Handling 'chainChanged' event with payload\", chainId)\n        activate(injected)\n      }\n      const handleAccountsChanged = (accounts: string[]) => {\n        console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n        if (accounts.length > 0) {\n          activate(injected)\n        }\n      }\n      const handleNetworkChanged = (networkId: string | number) => {\n        console.log(\"Handling 'networkChanged' event with payload\", networkId)\n        activate(injected)\n      }\n\n      ethereum.on('connect', handleConnect)\n      ethereum.on('chainChanged', handleChainChanged)\n      ethereum.on('accountsChanged', handleAccountsChanged)\n      ethereum.on('networkChanged', handleNetworkChanged)\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('connect', handleConnect)\n          ethereum.removeListener('chainChanged', handleChainChanged)\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\n          ethereum.removeListener('networkChanged', handleNetworkChanged)\n        }\n      }\n    }\n  }, [active, error, suppress, activate])\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}